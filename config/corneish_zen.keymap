#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // Uncomment the next line to use the five-column transform
        // zmk,matrix_transform = &five_column_transform;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWERTY";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | ENTR |   | BKPS | SPC  | HWR |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T      &kp Y     &kp U      &kp I      &kp O    &kp P     &kp ESCAPE
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G      &kp H     &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B      &kp N     &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RALT
                         &kp LGUI  &mo 1  &kp RET    &kp BSPC  &kp SPACE  &mo 2
            >;
        };

        lower_layer {
            label = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)     &kp LS(N4)            &kp LS(N5)               &kp LS(N6)      &kp LS(N7)       &kp LS(N8)        &kp LS(N9)         &kp LS(N0)  &kp BSPC
&kp TILDE  &kp N1      &kp N2      &kp N3         &kp N4                &kp N5                   &kp N6          &kp N7           &kp N8            &kp N9             &kp N0      &trans
&kp LSHFT  &trans      &trans      &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE    &trans
                                   &kp LGUI       &trans                &kp ENTER                &kp BACKSPACE   &kp SPACE        &trans
            >;
        };

        raise_layer {
            label = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
